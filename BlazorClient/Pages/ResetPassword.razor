@page "/reset-password"
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using Models
@using System.Text.Json
@using System.Text.RegularExpressions

<section class="bg-green">
    <div class="mask d-flex align-items-center gradient-custom-3 vh-100 main-content">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <a href="/" class="btn btn-link text-decoration-none">
                    <i class="bi bi-arrow-left"></i> Вернуться на главную
                </a>
            </div>
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <h2 class="text-center mb-3">Сброс пароля</h2>
                            <form>
                                <div class="form-group mb-3 text-start">
                                    <label for="token"><b>Токен</b></label>
                                    <input type="text" class="form-control" id="token" placeholder="Введите токен" @bind="Token">
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="password"><b>Новый пароль</b></label>
                                    <input type="@(ShowPassword ? "text" : "password")" class="form-control" id="password" placeholder="Введите новый пароль" @bind="Password">
                                </div>
                                <div class="form-group mb-3 text-start">
                                    <label for="confirmPassword"><b>Подтверждение пароля</b></label>
                                    <input type="@(ShowPassword ? "text" : "password")" class="form-control" id="confirmPassword" placeholder="Подтвердите пароль" @bind="ConfirmPassword">
                                </div>
                                <div class="form-check mb-3 text-start">
                                    <input type="checkbox" class="form-check-input" @bind="ShowPassword" id="showPassword">
                                    <label class="form-check-label" for="showPassword">Показать пароль</label>
                                </div>
                                @if (ShowPasswordMessage)

                                {
                                    <p class="text-danger">Пароль не введен или не соответствует требованиям</p>
                                }
                                @if (ShowConfirmPasswordMessage)

                                {
                                    <p class="text-danger">Пароли не совпадают</p>
                                }
                                <div class="alert alert-info mt-2" role="alert">
                                    Пароль должен быть минимум 8 символов, содержать 2 английские буквы разного регистра и хотя бы одну цифру.
                                </div>
                                <div class="w-100 d-flex justify-content-center">
                                    <button type="button" class="btn btn-primary mt-auto btn-custom" @onclick="ResetPass" disabled="@IsButtonDisabled">Сбросить пароль</button>
                                </div>
                            </form>
                            @if (!string.IsNullOrEmpty(ErrorMessage))

                            {
                                <div class="alert alert-danger mt-3" role="alert">
                                    @ErrorMessage
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(SuccessMessage))

                            {
                                <div class="alert alert-success mt-3" role="alert">
                                    @SuccessMessage
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string Token = null!;

    private string Password = null!;

    private string ConfirmPassword = null!;

    private bool IsButtonDisabled = false;

    private string ErrorMessage = string.Empty;

    private string SuccessMessage = string.Empty;



    private bool ShowPassword = false;

    private bool ShowPasswordMessage = false;

    private bool ShowConfirmPasswordMessage = false;



    private async Task ResetPass()

    {

        IsButtonDisabled = true;

        ErrorMessage = string.Empty;

        SuccessMessage = string.Empty;



        try

        {

            ShowPasswordMessage = !IsValidPassword(Password);

            ShowConfirmPasswordMessage = Password != ConfirmPassword;



            if (ShowPasswordMessage || ShowConfirmPasswordMessage)

            {

                return;

            }



            HttpClient client = new HttpClient
                {
                    BaseAddress = new Uri("https://oxygenmarketapi.onrender.com/")
                };



            ResetPasswordRequest resetPasswordRequest = new ResetPasswordRequest
                {
                    Token = Token,
                    Password = Password,
                    ConfirmPassword = ConfirmPassword
                };



            HttpResponseMessage response = await client.PostAsJsonAsync<ResetPasswordRequest>("Accounts/reset-password", resetPasswordRequest);



            if (response.IsSuccessStatusCode)

            {

                SuccessMessage = "Пароль успешно сброшен. Теперь вы можете войти с новым паролем.";

                Token = string.Empty;

                Password = string.Empty;

                ConfirmPassword = string.Empty;

                Navigation.NavigateTo("/login");

            }

            else

            {

                ErrorMessage = "Не удалось сбросить пароль. Пожалуйста, попробуйте снова.";

            }

        }

        catch (Exception ex)

        {

            ErrorMessage = $"Произошла ошибка: {ex.Message}";

        }

        finally

        {

            IsButtonDisabled = false;

        }

    }



    private bool IsValidPassword(string password)

    {

        if (string.IsNullOrWhiteSpace(password))

            return false;

        return password.Length >= 8 &&

               password.Any(char.IsLower) &&

               password.Any(char.IsUpper) &&

               password.Any(char.IsDigit);

    }
}

<style>
    .btn-custom {
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-custom:active {
            background-color: #4a3f7c !important;
            transform: scale(0.95);
        }
</style>