@page "/forgot-password"
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using Models
@using System.Text.Json

<section class="bg-green">
    <div class="mask d-flex align-items-center gradient-custom-3 vh-100 main-content">
        <div class="container" style="width: 3000px">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <a href="/" class="btn btn-link text-decoration-none">
                    <i class="bi bi-arrow-left"></i> Вернуться на главную
                </a>
            </div>
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <h2 class="text-center mb-3">Забыли пароль?</h2>
                            <p class="text-center text-muted mb-3">Введите ваш email, чтобы сбросить пароль.</p>
                            <form>
                                <div class="form-group mb-3 text-start">
                                    <label for="email"><b>Email</b></label>
                                    <input type="email" class="form-control" id="email" placeholder="Введите Email" @bind="Email" @oninput="OnEmailChanged">
                                </div>
                                <div class="w-100 d-flex justify-content-center">
                                    <button type="button" class="btn btn-primary mt-auto btn-custom" @onclick="ForgotPass" disabled="@IsButtonDisabled">Сбросить пароль</button>
                                </div>
                            </form>
                            @if (!string.IsNullOrEmpty(ErrorMessage))
                            {
                                <div class="alert alert-danger mt-3" role="alert">
                                    @ErrorMessage
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(SuccessMessage))
                            {
                                <div class="alert alert-success mt-3" role="alert">
                                    @SuccessMessage
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string Email = null!;
    private bool IsButtonDisabled = false;
    private string ErrorMessage = string.Empty;
    private string SuccessMessage = string.Empty;
    private void OnEmailChanged()
    {
        ErrorMessage = string.Empty;
    }
    private async Task ForgotPass()
    {
        IsButtonDisabled = true;
        ErrorMessage = string.Empty;
        SuccessMessage = string.Empty;
        try
        {
            if (string.IsNullOrEmpty(Email))
            {
                ErrorMessage = "Пожалуйста, введите ваш email.";
                return;
            }
            if (!await CheckIfEmailExists(Email))
            {
                ErrorMessage = "Пользователь с таким email не найден.";
                return;
            }
            HttpClient client = new HttpClient
                {
                    BaseAddress = new Uri("https://oxygenmarketapi.onrender.com/")
                };
            ForgotPasswordRequest forgotPasswordRequest = new ForgotPasswordRequest
                {
                    Email = Email
                };
            HttpResponseMessage response = await client.PostAsJsonAsync<ForgotPasswordRequest>("Accounts/forgot-password", forgotPasswordRequest);
            if (response.IsSuccessStatusCode)
            {
                SuccessMessage = "Ссылка для сброса пароля отправлена на ваш email. Перейдите по ней, чтобы сбросить пароль.";
                Email = string.Empty;
                Navigation.NavigateTo("/reset-password");
            }
            else
            {
                ErrorMessage = "Не удалось отправить ссылку для сброса пароля. Пожалуйста, попробуйте снова.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Произошла ошибка: {ex.Message}";
        }
        finally
        {
            IsButtonDisabled = false;
        }
    }
    private async Task<bool> CheckIfEmailExists(string email)
    {
        HttpClient client = new HttpClient
        {
                BaseAddress = new Uri("https://oxygenmarketapi.onrender.com/")
                
        };
        var response = await client.GetAsync($"Accounts/checkemail?email={email}");
        return response.IsSuccessStatusCode && await response.Content.ReadFromJsonAsync<bool>();
    }
}

<style>
    .btn-custom {
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-custom:active {
            background-color: #4a3f7c !important;
            transform: scale(0.95);
        }
</style>