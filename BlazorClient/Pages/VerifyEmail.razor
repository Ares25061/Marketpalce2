@page "/verify-email"
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using System.Text.Json

<section class="bg-green">
    <div class="mask d-flex align-items-center gradient-custom-3 vh-100 main-content">
        <div class="container" style="width: 3000px">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <a href="/" class="btn btn-link text-decoration-none">
                    <i class="bi bi-arrow-left"></i> Вернуться на главную
                </a>
            </div>
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card border shadow p-3 mb-5 bg-white" style="border-radius: 15px;">
                        <div class="card-body">
                            <h2 class="text-center mb-3">Подтверждение почты</h2>
                            @if (isLoading)
                            {
                                <div class="text-center">
                                    <p>Проверка токена...</p>
                                </div>
                            }
                            else if (!string.IsNullOrEmpty(ErrorMessage))
                            {
                                <div class="alert alert-danger mt-3" role="alert">
                                    @ErrorMessage
                                </div>
                            }
                            else if (!string.IsNullOrEmpty(SuccessMessage))
                            {
                                <div class="alert alert-success mt-3" role="alert">
                                    @SuccessMessage
                                    <br />
                                    <a href="/login" class="btn btn-primary mt-3">Войти</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private bool isLoading = true;
    private string ErrorMessage = string.Empty;
    private string SuccessMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Извлекаем токен из query-параметра
            var uri = new Uri(Navigation.Uri);
            var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
            var token = query["token"];

            if (string.IsNullOrEmpty(token))
            {
                ErrorMessage = "Токен не найден в URL.";
                isLoading = false;
                return;
            }

            // Отправляем запрос на API для подтверждения
            using var client = new HttpClient
                {
                    BaseAddress = new Uri("https://oxygenmarketapi.onrender.com/")
                };

            var request = new { Token = token };
            var response = await client.PostAsJsonAsync("Accounts/verify-email", request);

            if (response.IsSuccessStatusCode)
            {
                SuccessMessage = "Почта успешно подтверждена! Теперь вы можете войти.";
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                var errorObj = JsonSerializer.Deserialize<Dictionary<string, string>>(errorContent);
                ErrorMessage = errorObj.ContainsKey("message") ? errorObj["message"] : "Ошибка подтверждения почты.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Произошла ошибка: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}